version: '3'

services:
  db_postgres:
    container_name: 'db_listings'
    build:
      context: ./backend
      dockerfile: postgresql-docker
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./backend/database/listings:/var/lib/postgresql/data/
    networks:
      - app-network

  listings_api:
    entrypoint: /bin/sh './scripts/listings-dev.sh'
    build: ./backend
    env_file:
      - .env
    ports:
      - '4000:4000'
    depends_on:
      - db_postgres
      - redis
    links:
      - db_postgres
      # - cache
    volumes:
      - ./backend:/app/
      - /app/node_modules
    networks:
      - app-network

 
  redis:
        image: redis:6.2-alpine
        restart: always
        ports:
          - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass HCcx1ZSkWCWcldmp81Oi1X8WhjC43vyI
        volumes: 
          - cache:/data
  nextjs_frontend:
    container_name: 'nextjs_frontend'
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - listings_api
    command: npm run dev
    networks:
      - app-network
  # expo-app:
  #   build:
  #     context: ./mobile
  #     dockerfile: Dockerfile
  #     args:
  #       NODE_ENV: development 
  #       PORT: 19006
  #   ports:
  #     - "19006:19006"
  #     - "19001:19001"
  #     - "19002:19002"
  #   volumes:
  #     - .:/opt/my-app
  #   command: ["npx", "expo", "start", "--tunnel"]
  #   stdin_open: true
  #   tty: true
  #   networks:
  #     - app-network

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - "9200:9200"
  #   env_file:
  #     - .env
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
volumes:
  cache:
    driver: local
# esdata1:
#   driver: local

# networks:
#   esnet:

# version: '3'

# services:
#   listings_api:
#     container_name: 'apartment_api'
#     build: ./backend
#     restart: always
#     volumes:
#       - .:/app/
#       - /app/node_modules
